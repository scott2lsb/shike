package com.yshow.shike.activities;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.MotionEvent;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import com.umeng.analytics.MobclickAgent;
import com.yshow.shike.R;
import com.yshow.shike.UIApplication;
import com.yshow.shike.utils.Animation;
import com.yshow.shike.utils.Dialog;
import com.yshow.shike.utils.MediaRecorderUtil;
/**
 * @author
 */
public class Activity_Que_board extends Activity {
	private boolean isUnfold = true;
	private boolean mark = true;
	private ViewPager gr_board;
	private RelativeLayout ll_que_bom_anim;
	private LinearLayout ll_que_record;
	private Bitmap bitmap;
	private long firsttime ;
	private ImageView iv_record1;
	private ImageView iv_record2;
	private ImageView iv_record3;
	private int Count = 0;
	private int recLen = 0;
	private ArrayList<String> urllist;
	private Timer timer = null;
	private LinearLayout que_vol_ctl;
	private TextView time_settings;
	final Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case 1:
				time_settings.setText("录音剩余时间：" + recLen);
				if (recLen < 0) {
					timer.cancel();
					time_settings.setText("录音剩余时间：" + 0);
					recLen = 1;
				}
			}
		}
	};
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activty_que_board);
		initData();
	}
	@SuppressWarnings("unchecked")
	private void initData() {
		gr_board = (ViewPager) findViewById(R.id.gr_que_board);
		ll_que_bom_anim = (RelativeLayout) findViewById(R.id.ll_que_bom_anim);
		ll_que_record = (LinearLayout) findViewById(R.id.ll_que_record);
		iv_record1 = (ImageView) findViewById(R.id.iv_que_record1);
		iv_record2 = (ImageView) findViewById(R.id.iv_que_record2);
		iv_record3 = (ImageView) findViewById(R.id.iv_que_record3);
		que_vol_ctl = (LinearLayout) findViewById(R.id.ll_que_volume_control);
		time_settings = (TextView) findViewById(R.id.tv_que_time_settings);
		findViewById(R.id.tv_que_back).setOnClickListener(listener);
		findViewById(R.id.tv_que_voice).setOnClickListener(listener);
		findViewById(R.id.tv_que_add).setOnClickListener(listener);
		findViewById(R.id.tv_que_comfing).setOnClickListener(listener);
		findViewById(R.id.iv_que_point).setOnClickListener(listener);
        ImageView iv_que_voide = (ImageView) findViewById(R.id.iv_que_voide);
        urllist = new ArrayList<String>();
        iv_que_voide.setOnTouchListener(new OnTouchListener() {
        	MediaRecorderUtil voide = new MediaRecorderUtil(Activity_Que_board.this);
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				if(Count < 3){
					switch (event.getAction()) {
					case MotionEvent.ACTION_DOWN:
						firsttime = System.currentTimeMillis();
							REC();
							voide.startRecorder();
						break;
					case MotionEvent.ACTION_UP:
                        if(timer!=null){
                            timer.cancel();
                        }
						long twotime = System.currentTimeMillis();
						if(twotime - firsttime < 1000){
							Toast.makeText(Activity_Que_board.this, "时间太短", 0).show();
						}else {
							VoideShow();
							voide.stopRecorder();
							String url = voide.getFilePath();
							urllist.add(url);
							Count ++ ;
						}
						que_vol_ctl.setVisibility(View.GONE);
						break;
					}
				}else {
					Toast.makeText(Activity_Que_board.this, "最多只能发3条语音", 0).show();
				}
				return true;
			}
		});
		bitmap = (Bitmap) getIntent().getExtras().get("bitmap");
		((UIApplication)UIApplication.getInstance()).getList().add(bitmap);
		gr_board.setAdapter(new MyAdapter());
	}

	private OnClickListener listener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			switch (v.getId()) {
			case R.id.tv_que_back:
				finish();
				break;
			case R.id.tv_que_voice:
				RecordingAnimation();
				break;
			case R.id.tv_que_add:
				Dialog.Intent(Activity_Que_board.this,Stu_Paint_Activity.class);
				break;
			case R.id.tv_que_comfing:
				Intent intent = new Intent(Activity_Que_board.this, Activity_Que_board.class);
				intent.putExtra("bitmap",bitmap);
				Dialog.IntentParamet(Activity_Que_board.this, Activity_Que_board2.class, "bitmap",bitmap);
				Toast.makeText(Activity_Que_board.this, "图片和录音的路径", 0).show();
				break;
			case R.id.iv_que_point:
				Animation animation = new Animation(Activity_Que_board.this,ll_que_bom_anim, -17, 17);
				animation.initData(isUnfold);
				isUnfold = !isUnfold;
				break;
			}
		}
	};
	class MyAdapter extends PagerAdapter {
		@Override
		public int getCount() {
			return ((UIApplication)UIApplication.getInstance()).getList().size();
		}
		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			View view = View.inflate(Activity_Que_board.this,R.layout.activity_que_item, null);
			ImageView im_que_item = (ImageView) view.findViewById(R.id.im_que_item);
			im_que_item.setImageBitmap(bitmap);
			container.addView(view);
			return view;
		}
	}
	public void RecordingAnimation() {
		if (mark) {
			ll_que_record.setVisibility(View.VISIBLE);
			Dialog.Animation(this, R.anim.bottom_anim_out, ll_que_record);
			mark = false;
		} else {
			Dialog.Animation(this, R.anim.bottom_anim_in, ll_que_record);
			ll_que_record.setVisibility(View.GONE);
			mark = true;
		}
	}
	private void REC() {
		que_vol_ctl.setVisibility(View.VISIBLE);
		recLen = 30;
		timer = new Timer();
		TimerTask task = new TimerTask() {
			@Override
			public void run() {
					recLen--;
					Message message = new Message();
					message.what = 1;
					handler.sendMessage(message);
			}
		};
		timer.schedule(task, 30, 1000);
	}
	public void VoideShow() {
		if (Count == 0) {
			iv_record1.setVisibility(View.VISIBLE);
		} else if (Count == 1) {
			iv_record2.setVisibility(View.VISIBLE);
		} else {
			iv_record3.setVisibility(View.VISIBLE);
		}
	}

    @Override
    public void onResume() {
        super.onResume();
        MobclickAgent.onResume(this);
    }

    @Override
    public void onPause() {
        super.onPause();
        MobclickAgent.onPause(this);
    }
}