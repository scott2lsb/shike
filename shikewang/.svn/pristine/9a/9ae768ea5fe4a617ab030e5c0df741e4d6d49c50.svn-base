package com.yshow.shike.activities;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.TranslateAnimation;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.yshow.shike.R;
import com.yshow.shike.fragments.Fragment_Message;
import com.yshow.shike.fragments.Fragment_Teacher_About_Shike;
import com.yshow.shike.fragments.Fragment_Teacher_My_Student;
import com.yshow.shike.fragments.Fragment_Teacher_Writing_Topic;
import com.yshow.shike.utils.Animation;
import com.yshow.shike.utils.Dialog;
import com.yshow.shike.utils.Dilog_Share;
import com.yshow.shike.utils.Exit_Login;
import com.yshow.shike.utils.PartnerConfig;
import com.yshow.shike.utils.ScreenSizeUtil;
import com.yshow.shike.utils.ShareDialog;
import com.yshow.shike.utils.WeixinManager;
public class Teather_Main_Activity extends FragmentActivity implements OnClickListener{
	private int mea_view; // 长度测量
	private View undline,bac_topic; //需要测量的红线 和字体的背景颜色
	private FragmentManager manager; //Fragment管理器
	private FragmentTransaction ft; // Fragment 转化活动
	private int startX = 0; // 当前一道第几个位置
	private Context context; //上下文
	private RelativeLayout ic_tea_buttom ;//底部隱藏部分
	private Boolean isUnfold = false ;//底部动画转换标记
	private android.app.Dialog dialog; //分享功能的dialo动画
	private TextView tv_mess_del; //消息删除
	private TextView my_stu ,tea_topic,tea_mess;//我的学生 题库 消息 标题按钮
	public static Teather_Main_Activity Tea_Main_mInstance;
	private WeixinManager weixinManager;
    private ImageView mess_num;

    //	private ImageView TEA_YD,TEA_TOOL_YD;
//	private View tea_main_view_bac,tea_tool_view_white;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.teather_main_activity);
		context = this;
		Tea_Main_mInstance = this;
		initData();
	}
//	各个控件初始化
	private void initData() {
//		TEA_TOOL_YD = (ImageView) findViewById(R.id.tea_yd_tool1);
//		TEA_YD = (ImageView) findViewById(R.id.tea_yindao_1);
//		tea_main_view_bac = findViewById(R.id.tea_main_view_bac);
//		tea_tool_view_white = findViewById(R.id.tea_tool_view_white);
//		tea_main_view_bac.setOnClickListener(this);
//		YD.getInstence().setTea_YD_Tool(this,context, PartnerConfig.TEA_YD_TOOL,TEA_YD, findViewById(R.id.tea_yd1));
		dialog = new Dilog_Share().Dilog_Anim(context,this);
		weixinManager = new WeixinManager(Teather_Main_Activity.this);
		tea_mess = (TextView) findViewById(R.id.tv_tea_mess);
        mess_num = (ImageView) findViewById(R.id.mess_num);
		my_stu = (TextView) findViewById(R.id.tv_my_stu);
		tea_topic = (TextView) findViewById(R.id.tv_tea_topic);
		tea_mess.setOnClickListener(this);
		my_stu.setOnClickListener(this);
		tea_topic.setOnClickListener(this);
		findViewById(R.id.tea_wire).setOnClickListener(this);
		findViewById(R.id.tv_exchg_sp).setOnClickListener(this);
		findViewById(R.id.tv_my_shike).setOnClickListener(this);
		findViewById(R.id.tv_tea_shar).setOnClickListener(this);
		findViewById(R.id.tv_tea_main_back).setOnClickListener(this);
		findViewById(R.id.tv_exchg_mon).setOnClickListener(this);
		findViewById(R.id.tv_tea_info).setOnClickListener(this);
		findViewById(R.id.tv_tea_count).setOnClickListener(this);
		findViewById(R.id.tv_tea_about).setOnClickListener(this);
		tv_mess_del = (TextView) findViewById(R.id.tv_mess_del);
		tv_mess_del.setOnClickListener(this);
		undline = findViewById(R.id.tea_move_undline);
		bac_topic = findViewById(R.id.tea_bac_huise);
		ic_tea_buttom = (RelativeLayout) findViewById(R.id.ic_tea_buttom);
        // 初始化红线的长度
		mea_view = ScreenSizeUtil.getScreenWidth(context, 3);
		LayoutParams params = new LinearLayout.LayoutParams(mea_view,3);
		int view_hig = ScreenSizeUtil.Dp2Px(context, 45);
		android.widget.RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(mea_view,view_hig);
		bac_topic.setLayoutParams(layoutParams);
		undline.setLayoutParams(params);
		manager = getSupportFragmentManager();
		ft = manager.beginTransaction();
		ft.replace(R.id.tea_mid_cot,Fragment_Message.getInstance());
		ft.commit();
	}
//	控件的点击事件
	@Override
	public void onClick(View v) {
		ft = manager.beginTransaction();
       switch (v.getId()) {
//       case R.id.tea_main_view_bac:
//    	   TEA_YD.setVisibility(View.GONE);
//    	   tea_main_view_bac.setVisibility(View.GONE);
//    	   tea_tool_view_white.setVisibility(View.GONE);
//    	   break;
//       case R.id.tea_yd_tool1:
//    	   TEA_TOOL_YD.setVisibility(View.GONE);
//    	   tea_main_view_bac.setVisibility(View.GONE);
//    	   tea_tool_view_white.setVisibility(View.GONE);
//    	   break;
     // 老是端 消息页面 控件
	case R.id.tv_tea_topic:
		tea_mess.setTextColor(getResources().getColor(R.color.log));
		my_stu.setTextColor(getResources().getColor(R.color.log));
		tea_topic.setTextColor(getResources().getColor(R.color.reg));
		tv_mess_del.setVisibility(View.VISIBLE);
		StartTransAnim(startX, 0,undline);
		StartTransAnim(startX, 0,bac_topic);
		ft.replace(R.id.tea_mid_cot,Fragment_Message.getInstance());
		startX = 0;
		break;
	// 老是端 我的学生页面 控件
	case R.id.tv_tea_mess:
		tea_mess.setTextColor(getResources().getColor(R.color.reg));
		my_stu.setTextColor(getResources().getColor(R.color.log));
		tea_topic.setTextColor(getResources().getColor(R.color.log));
		tv_mess_del.setVisibility(View.GONE);
		StartTransAnim(startX, 1,undline);
		StartTransAnim(startX, 1,bac_topic);
		ft.replace(R.id.tea_mid_cot,new Fragment_Teacher_My_Student());
		startX = 1;
		break;
    //制作题目tab
	case R.id.tv_my_stu:
//		YD.getInstence().setTea_YD_Tool(this,context, PartnerConfig.TEA_TOOL,TEA_TOOL_YD,TEA_YD);
		tea_mess.setTextColor(getResources().getColor(R.color.log));
		my_stu.setTextColor(getResources().getColor(R.color.reg));
		tea_topic.setTextColor(getResources().getColor(R.color.log));
		tv_mess_del.setVisibility(View.GONE);
		StartTransAnim(startX, 2,undline);
		StartTransAnim(startX, 2,bac_topic);
		ft.replace(R.id.tea_mid_cot,new Fragment_Teacher_Writing_Topic());
		startX = 2;
		break;
	case R.id.tea_wire:
		Animation animation = new Animation(context,ic_tea_buttom, -258, 258);
		animation.initData(isUnfold);
		isUnfold = !isUnfold;
		break;
	// 我的师课
	case R.id.tv_my_shike:
		Dialog.Intent(context,Activity_Teather_ShiKe.class);
		break;
	// 删除消息
	case R.id.tv_mess_del:
		Fragment_Message.handler.sendEmptyMessage(5168);
		break;
	// 兑换现金
	case R.id.tv_exchg_mon:
		Dialog.Intent(this,Tea_chg_Mon_Acy.class);
		break;
		//兑换商品
	case R.id.tv_exchg_sp:
		Dialog.Intent(this, Tea_chg_Comm_Act.class);
		break;
	  // 个人信息
	case R.id.tv_tea_info:
		Dialog.Intent(context, Age_Person_Info.class);
		break;
		//账户信息
	case R.id.tv_tea_count:
		Dialog.Intent(context,Activity_Teacher_zhanghu.class);
		break;
		//分享同学 
	case R.id.tv_tea_shar:
		dialog.show();
		break;
		//关于师课 
	case R.id.tv_tea_about:
		Dialog.Intent(context,Fragment_Teacher_About_Shike.class);
		break;
		//退出键 
	case R.id.tv_tea_main_back:
		Exit_Login.getInLogin().Back_Login(context);
		break;
	case R.id.share_dialog_weixin:
		dialog.dismiss();
		weixinManager.shareWeixin();
		break;
	case R.id.share_weixin_friend:
		dialog.dismiss();
		weixinManager.shareWeixinCircle();
		break;
	case R.id.share_dialog_message:
		ShareDialog.sendSMS(context, PartnerConfig.CONTEBT);
		dialog.dismiss();
		break;
	case R.id.share_dialog_email:
		dialog.dismiss();
		ShareDialog.openCLD(PartnerConfig.CONTEBT,this);
		break;
	case R.id.share_dialog_cancle:
		dialog.dismiss();
		break;
	  }		
       ft.commit();
	}
	//开始执行动画的位移
	private void StartTransAnim(float fromXDelta,float toXDelta,View view) {
		TranslateAnimation anim = new TranslateAnimation(fromXDelta*mea_view, toXDelta*mea_view, 0, 0);
		anim.setDuration(500);
		anim.setFillAfter(true);
		view.startAnimation(anim);
	}
	/**
	 * 分发按键事件, 按下键盘上返回按钮
	 */
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_DOWN) {
			Exit_Login.getInLogin().Back_Key(context);
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}

    public void changeMessNum(boolean isShow) {
        mess_num.setVisibility(isShow?View.VISIBLE:View.GONE);
    }
}